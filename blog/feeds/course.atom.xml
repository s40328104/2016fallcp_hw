<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2016Fall CPA 課程網誌 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-01-09T14:50:00+08:00</updated><entry><title>2016fallcp期末考週</title><link href="./2016fallcpqi-mo-kao-zhou.html" rel="alternate"></link><published>2017-01-09T14:50:00+08:00</published><updated>2017-01-09T14:50:00+08:00</updated><author><name>40328104</name></author><id>tag:,2017-01-09:./2016fallcpqi-mo-kao-zhou.html</id><summary type="html">&lt;p&gt;W16週心得與程式範例 : &lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import alert
from browser import document
from browser import html
import random
#print("test")
#alert("test")
con1 = document["con"]
# 1.利用亂數模組產生標準答案
標準答案 = random.randint(1,100)
你猜的數字 = int(input("請輸入您所猜的整數:")) 
猜測次數 = 1
while 標準答案 != 你猜的數字:
    if 標準答案 &lt; 你猜的數字:
        print("太大了，再猜一次 :)加油")
    else:
        print("太小了，再猜一次 :)加油")
    你猜的數字 = int(input("請輸入您所猜的整數:"))
    猜測次數 += 1

print("猜對了！總共猜了", 猜測次數, "次")
con1 &lt;= str(標準答案)
'''
try:
    for i in range(1) :
        #con1 &lt;= "test"+"&lt;br/&gt;"
        yourInput=int(input("請輸入一整數唷!!"))
        #con1 &lt;="test"+html.BR()
        output = yourInput + 1
        con1 &lt;= "你輸入整數加上1之後，為" +str(output)
except:
    con1 &lt;= "拜託請輸入整數好嗎87"
'''
def b1(e):
    alert("click")
document["b1"].bind("click",b1)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;W15週心得與程式範例 :&lt;/p&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container&lt;="W14練習"
&lt;/script&gt;



&lt;canvas id="ex2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring=input("要印出什麼字串?")
mynum=input("要印幾次?")

for i in range(int(mynum)):
    #container&lt;="W14練習-2"+html.BR()
    container&lt;=mystring+html.BR()



&lt;/script&gt;

&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W16</title><link href="./w16.html" rel="alternate"></link><published>2016-12-26T14:01:00+08:00</published><updated>2016-12-26T14:01:00+08:00</updated><author><name>40328104</name></author><id>tag:,2016-12-26:./w16.html</id><summary type="html">&lt;p&gt;w16&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;div id="con"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import alert
from browser import document
from browser import html
import random
#print("test")
#alert("test")
con1 = document["con"]
# 1.利用亂數模組產生標準答案
標準答案 = random.randint(1,100)
你猜的數字 = int(input("請輸入您所猜的整數:")) 
猜測次數 = 1
while 標準答案 != 你猜的數字:
    if 標準答案 &lt; 你猜的數字:
        print("太大了，再猜一次 :)加油")
    else:
        print("太小了，再猜一次 :)加油")
    你猜的數字 = int(input("請輸入您所猜的整數:"))
    猜測次數 += 1

print("猜對了！總共猜了", 猜測次數, "次")
con1 &lt;= str(標準答案)
'''
try:
    for i in range(1) :
        #con1 &lt;= "test"+"&lt;br/&gt;"
        yourInput=int(input("請輸入一整數唷!!"))
        #con1 &lt;="test"+html.BR()
        output = yourInput + 1
        con1 &lt;= "你輸入整數加上1之後，為" +str(output)
except:
    con1 &lt;= "拜託請輸入整數好嗎87"
'''
def b1(e):
    alert("click")
document["b1"].bind("click",b1)
&lt;/script&gt;

&lt;p&gt;&lt;button id="b1"&gt;玩猜數字遊戲&lt;/button&gt;&lt;/p&gt;</summary><category term="Brython"></category></entry><entry><title>W14練習</title><link href="./w14lian-xi.html" rel="alternate"></link><published>2016-12-12T14:35:00+08:00</published><updated>2016-12-12T14:35:00+08:00</updated><author><name>40328104</name></author><id>tag:,2016-12-12:./w14lian-xi.html</id><summary type="html">&lt;p&gt;以下為第十四週開始的程式練習，要利用&lt;a href="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 要整理Brython的用法。&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container&lt;="W14練習"
&lt;/script&gt;



&lt;canvas id="ex2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring=input("要印出什麼字串?")
mynum=input("要印幾次?")

for i in range(int(mynum)):
    #container&lt;="W14練習-2"+html.BR()
    container&lt;=mystring+html.BR()

    &lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;


&lt;canvas id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container&lt;="W14練習"
&lt;/script&gt;



&lt;canvas id="ex2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring=input("要印出什麼字串?")
mynum=input("要印幾次?")

for i in range(int(mynum)):
    #container&lt;="W14練習-2"+html.BR()
    container&lt;=mystring+html.BR()

&lt;/pre&gt;
&lt;/script&gt;</summary><category term="每週練習"></category></entry><entry><title>W15練習</title><link href="./w15lian-xi.html" rel="alternate"></link><published>2016-12-12T14:35:00+08:00</published><updated>2016-12-12T14:35:00+08:00</updated><author><name>40328104</name></author><id>tag:,2016-12-12:./w15lian-xi.html</id><summary type="html">&lt;p&gt;以下為第十四週開始的程式練習，要利用&lt;a href="http://mde.tw/2016fallcp/course/Python3Programs.txt"&gt;http://mde.tw/2016fallcp/course/Python3Programs.txt&lt;/a&gt; 要整理Brython的用法。&lt;/p&gt;


&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;canvas id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
container = doc['ex1']

container&lt;="W14練習"
&lt;/script&gt;



&lt;canvas id="ex2"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
container = doc['ex2']
mystring=input("要印出什麼字串?")
mynum=input("要印幾次?")

for i in range(int(mynum)):
    #container&lt;="W14練習-2"+html.BR()
    container&lt;=mystring+html.BR()



&lt;/script&gt;</summary><category term="每週練習"></category></entry><entry><title>W13</title><link href="./w13.html" rel="alternate"></link><published>2016-12-04T14:00:00+08:00</published><updated>2016-12-04T14:00:00+08:00</updated><author><name>40328104</name></author><id>tag:,2016-12-04:./w13.html</id><summary type="html">&lt;p&gt;在機械設計工程系的計算機程式課程中, 學習 Python3 的基本目的, 希望在最短時間內, 讓學員能夠除了在身旁的電腦或筆電上, 利用 Python3 程式語法進行各種資料處理與運算外, 還希望學員能夠透過編寫網際程式, 利用網站執行協同設計程式.&lt;/p&gt;


&lt;h3&gt;Python3 能做什麼?&lt;/h3&gt;
&lt;p&gt;Python3 指的是 Python 程式語言第 3 版, 是一種解譯式泛用型程式語言, 能夠在程式碼編寫好了之後, 馬上利用 Python3 解譯器執行, 程式碼是在執行當下才自動轉為機器碼, 因此使用者可以最簡便的方式使用 Python3.&lt;/p&gt;
&lt;p&gt;在大一的計算機課程中, 我們利用 Python 編寫的 &lt;a href="http://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 作為近端的資料管理與整合程式開發中心, 並利用 Python 編寫的 &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 工具, 將使用者建立的 &lt;a href="https://en.wikipedia.org/wiki/Markdown"&gt;Markdown&lt;/a&gt; 格式檔案, 轉為組成 Blog 系統所需要的 html 格式檔案. 使用者所編寫的 Markdown 檔案中可以嵌入格式與 Python3 相容的 &lt;a href="http://www.brython.info/"&gt;Brython&lt;/a&gt; 程式碼, 也可以直接在瀏覽器中執行這些 Brython 程式, 進行網際環境中的資料處理與 2D/3D 靜態與動態繪圖.&lt;/p&gt;
&lt;p&gt;因此, 在這門課程的範疇中, Python3 能夠做什麼? 簡單說, 我們在此所學習的 Python3 計算機程式語法, 可以在單機操作系統中, 以及瀏覽器中利用電腦進行資料處理、數值運算與繪圖.&lt;/p&gt;
&lt;h3&gt;Python3 的資料處理&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://leoeditor.com/"&gt;Leo Editor&lt;/a&gt; 利用大綱模式管理資料, 就是 Python3 程式應用的範例, 至於 &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 套件將 Markdown 檔案轉為 Blog 專用的 html 檔案, 也是一系列利用 Python3 指令與語法進行資料處理的過程.&lt;/p&gt;
&lt;p&gt;課程進行初始, 本課程利用 Python3 程式進行學員資料的讀取、分組排序, 轉而利用 Brython 直接在網頁上處理學員資料, 也是 Python3 程式進行資料處理的應用之一.&lt;/p&gt;
&lt;h3&gt;Python3 的數值運算&lt;/h3&gt;
&lt;p&gt;在工程應用中, 最簡單的數值運算就是各種工程尺寸與單位的換算, 在本課程中, 使用者可以利用 Python3 程式語法建立單機與網頁上執行的物理量單位換算程式.&lt;/p&gt;
&lt;h3&gt;Python3 的繪圖&lt;/h3&gt;
&lt;p&gt;本課程中的 Python3 繪圖應用以在瀏覽器中執行為主, 使用者學會基本的 Brython 程式語法以及 html5 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API"&gt;Canvas&lt;/a&gt; 繪圖指令後, 就可以直接將 Canvas 繪圖程式寫在 Markdown 檔案中, 然後再利用 &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt; 將檔案轉為 html&lt;/p&gt;
&lt;h3&gt;Python 程式執行&lt;/h3&gt;
&lt;p&gt;由於本課程主要在 Windows 10 環境中, 以可攜的 &lt;a href="http://conda.pydata.org/miniconda.html"&gt;Miniconda&lt;/a&gt; Python 3.5 系統為主, 使用者啟動後 ,可以利用可攜系統對應的命令列, 輸入 python 後帶出解譯器環境, 就可以直接下指令執行 Python3 程式語法.&lt;/p&gt;
&lt;p&gt;此外, 若使用者將 Python3 程式存成 ex1.py, 也可以直接在可攜系統對應的命令列中, 透過 python ex1.py 執行 ex1.py 程式.&lt;/p&gt;
&lt;p&gt;當然, 假如 ex1.py 已經利用 Leo Editor 的 @edit 節點指令導入, 也可以在 Leo Editor 環境中, 透過 Ctrl+b 按鍵執行, 而且假如要在 Leo Editor 的 Log 視窗中列印, 可以使用 g.es() 函式, 其中的 g 代表 Leo Editor 的 global 物件, 而 es() 函式則代表 echo string.&lt;/p&gt;
&lt;p&gt;本課程 Brython 程式的執行則牽涉 3 個步驟, 也就是導入 brython.js, 啟動 brython, 最後才能 html5 的檔案中, 利用 script 標註執行 Brython 程式.&lt;/p&gt;
&lt;p&gt;接下來我們將利用 Hello Mde 字串的列印進行示範.&lt;/p&gt;
&lt;p&gt;操作系統中, 進入解譯環境列印:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/201612/hello_interpreter.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;操作系統中, 呼叫 python 執行 ex1.py 列印:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/201612/hello_command.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/201612/hello_command2.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Leo Editor 導入 ex1.py 當作節內容後, 按下 Ctrl+b 列印:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/201612/leo_editor_execution.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;Leo Editor 導入 ex1.py 後, 改用 g.es() 函式, 按下 Ctrl+b 列印:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://chiamingyen.github.io/kmolab_data/files/201612/leo_editor_execution2.png" width="600" /&gt;&lt;/p&gt;
&lt;p&gt;在瀏覽器中以 alert() 函式列印:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下可以執行  Brython 程式 --&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import alert

def echo(ev):
    alert("Hello Mde")

doc['alert'].bind('click',echo)
&lt;/script&gt;

&lt;p&gt;&lt;button id="alert"&gt;呼叫 alert 列印!&lt;/button&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import alert

def echo(ev):
    alert("Hello Mde")

doc['alert'].bind('click',echo)
&lt;/script&gt;
&lt;button id="alert"&gt;呼叫 alert 列印!&lt;/button&gt;
&lt;/pre&gt;

&lt;p&gt;在瀏覽器中, 直接將執行結果嵌入 html 網頁中:&lt;/p&gt;
&lt;div id="ex1"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
# 特殊 html 標註必須透過 html 模組呼叫
# http://www.brython.info/static_doc/en/html.html
#from browser import html

container = doc["ex1"]
container &lt;= "Hello Mde"
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;div id="ex1"&gt;&lt;/div&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
# 特殊 html 標註必須透過 html 模組呼叫
# http://www.brython.info/static_doc/en/html.html
#from browser import html

container = doc["ex1"]
container &lt;= "Hello Mde"
&lt;/script&gt;
&lt;/pre&gt;

&lt;h3&gt;Python3 的繪圖&lt;/h3&gt;
&lt;canvas id="bat" width="500" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["bat"]
ctx = canvas.getContext("2d")

# 開始畫圖
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 繪圖座標放大 5 倍, 並配合圖形位置進行座標轉換
ctx.transform(5, 0, 0, -5, canvas.width/2, canvas.height/2)
bat_points = [(5, -1), (6, -2), (8, 0), (10, 4), (12, 8), (13, 12), (13, 16), (15, 15), (19, 15), (22, 15), (24, 15), (26, 16), (25, 14), (23, 10),
(22, 6), (19, 5), (17, 3), (16, 1), (15, -3), (15, -7), (13, -8), (11, -10), (9, -12), (8, -14), (7, -18), (5, -16), (1, -14), (0, -14), (-4, -15),
(-6, -17), (-8, -15), (-10, -13), (-11, -12), (-12, -12), (-13, -12), (-14, -13), (-17, -15), (-18, -15), (-22, -13), (-24, -12), (-25, -12), (-
27, -13), (-25, -11), (-23, -8), (-21, -5), (-19, 0), (-15, -2), (-12, -4), (-10, -5), (-7, -6), (-4, -6), (-1, -6), (-1, -3), (-2, 1), (0, -1), (1, 0),
(2, 0), (3, 1), (3, 3), (5, -1)]

ctx.moveTo(3, 3)
for point in bat_points:
    ctx.lineTo(point[0],point[1])
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;pre class="brush: python"&gt;
&lt;canvas id="bat" width="500" height="200"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["bat"]
ctx = canvas.getContext("2d")

# 開始畫圖
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 繪圖座標放大 5 倍, 並配合圖形位置進行座標轉換
ctx.transform(5, 0, 0, -5, canvas.width/2, canvas.height/2)
bat_points = [(5, -1), (6, -2), (8, 0), (10, 4), (12, 8), (13, 12), (13, 16), (15, 15), (19, 15), (22, 15), (24, 15), (26, 16), (25, 14), (23, 10),
(22, 6), (19, 5), (17, 3), (16, 1), (15, -3), (15, -7), (13, -8), (11, -10), (9, -12), (8, -14), (7, -18), (5, -16), (1, -14), (0, -14), (-4, -15),
(-6, -17), (-8, -15), (-10, -13), (-11, -12), (-12, -12), (-13, -12), (-14, -13), (-17, -15), (-18, -15), (-22, -13), (-24, -12), (-25, -12), (-
27, -13), (-25, -11), (-23, -8), (-21, -5), (-19, 0), (-15, -2), (-12, -4), (-10, -5), (-7, -6), (-4, -6), (-1, -6), (-1, -3), (-2, 1), (0, -1), (1, 0),
(2, 0), (3, 1), (3, 3), (5, -1)]

ctx.moveTo(3, 3)
for point in bat_points:
    ctx.lineTo(point[0],point[1])
ctx.stroke()
ctx.closePath()
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry><entry><title>W12 Brython 繪圖練習</title><link href="./w12-brython-hui-tu-lian-xi.html" rel="alternate"></link><published>2016-12-02T14:00:00+08:00</published><updated>2016-12-02T14:00:00+08:00</updated><author><name>40328104</name></author><id>tag:,2016-12-02:./w12-brython-hui-tu-lian-xi.html</id><summary type="html">&lt;p&gt;Brython 繪圖&lt;/p&gt;


&lt;p&gt;繪圖流程, 導入程式庫, 啟動, 然後引用各種模組開始繪圖.&lt;/p&gt;
&lt;p&gt;以下利用函式定義進行和弦底稿繪圖:&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;

&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
mylist = ["E", "A", "D", "G", "B", "E"]
num = 0
for s in mylist:
    #canvasText(100,  80, 20, "A", "b", "", "black", ctx)
    canvasText(100+num*w,  80, 20, s, "", "", "black", ctx)
    num = num + 1
&lt;/script&gt;

&lt;p&gt;上述繪圖的程式碼:&lt;/p&gt;
&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫圖 --&gt;
&lt;canvas id="chord1" width="600" height="400"&gt;&lt;/canvas&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["chord1"]
ctx = canvas.getContext("2d")

def background(x, y, xinc, yinc, xnum, ynum, ctx):
    # 水平線
    for i in range(ynum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        if i == 0:
            ctx.lineWidth = 7
        else:
            ctx.lineWidth = 1
        ctx.moveTo(x-1, y+i*yinc)
        ctx.lineTo(x+xnum*xinc+1, y+i*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

    # 垂直線
    for i in range(xnum+1):
        ctx.beginPath()
    # 設定線的寬度為 1 個單位
        ctx.lineWidth = 1
        ctx.moveTo(x+i*xinc, y)
        ctx.lineTo(x+i*xinc, y+ynum*yinc)
        # 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
        ctx.strokeStyle = "blue"
        ctx.stroke()
        ctx.closePath()

def canvasText(x, y, fontSize, string, sup, sub, color, ctx):
    # 標定各弦音符號, 以及把位編號
    ctx.beginPath()
    ctx.fillStyle = color
    ctx.strokeStyle = color
    #ctx.font = "20px Arial"
    ctx.font = str(fontSize)+ "px Arial"
    ctx.fillText(string, x, y)
    ctx.font = str(fontSize-8)+ "px Arial"
    if sup != "":
        ctx.fillText(sup, x+fontSize/1.6, y-fontSize/2)
    if sub != "":
        ctx.fillText(sup, x+fontSize/1.6, y)
    ctx.fill()
    ctx.stroke()
    ctx.closePath()

w = 20
h = 30
background(100, 100, w, h, 5, 5, ctx)
canvasText(100,  80, 20, "A", "b", "", "black", ctx)
&lt;/script&gt;
&lt;/pre&gt;</summary><category term="Brython"></category></entry></feed>